version: 0.1
component: build
timeoutInSeconds: 6000
shell: bash
failImmediatelyOnError: true

env:
  variables:
    OCIR_AUTH_TOKEN_VAULT: "ybC#;7rk86m-S>HVL3Zz"
    OCIR_USERNAME: "a01640495@tec.mx"
    JAVA_HOME : "/usr/lib64/graalvm/graalvm-java17"
    DOCKER_COMPOSE: "/usr/local/bin/docker-compose"
    JAVA_VERSION: "17"
  vaultVariables:
    OCIR_HOST_VALUT: ocid1.vaultsecret.oc1.mx-queretaro-1.amaaaaaat7x4woaahf3fg56aijkgulajay5iqhaarc4ndk6f2wuz2z73li4q
    OCIR_STORAGE_NAMESPACE_VAULT: ocid1.vaultsecret.oc1.mx-queretaro-1.amaaaaaat7x4woaajyqtytzl57umlknxmwdi72ltmdtpq4zlz4o7evs2atwa
  exportedVariables:
    - OCIR_HOST
    - OCIR_STORAGE_NAMESPACE
    - CHART_VERSION
    - SECURITY_SERVICE_IMAGE_BUILD_VERSION
    - USERS_SERVICE_IMAGE_BUILD_VERSION
    - TASKS_SERVICE_IMAGE_BUILD_VERSION

steps:
  - type: Command
    name: "Extract export variables"
    timeoutInSeconds: 60
    failImmediatelyOnError: true
    command: |
      echo PATH is
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
      echo JAVA_VERSION is
      echo $JAVA_VERSION
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot
      echo Extracting export variables -Working in 'pwd'
      echo transferring the OCIR_HOST and OCIR_STORAGE_NAMESPACE variables to the workspace
      export OCIR_HOST=$OCIR_HOST_VALUT
      echo OCIR_HOST is $OCIR_HOST
      export OCIR_STORAGE_NAMESPACE=$OCIR_STORAGE_NAMESPACE_VAULT
      echo OCIR_STORAGE_NAMESPACE is $OCIR_STORAGE_NAMESPACE
      echo image will be stored to  ${OCIR_HOST}/${OCIR_STORAGE_NAMESPACE}/a01640495@tec.mx/:latest
    onFailure:
     - type: Command
       timeoutInSeconds: 40
       command: |
          echo "Failed to extract export variables"


  - type: Command
    name: "Install local JDK17"
    timeoutInSeconds: 10000
    command: |
      yum -y install graalvm-17-native-image
      export PATH=$JAVA_HOME/bin:$PATH
      echo path is
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
    onFailure:
      - type: Command
        timeoutInSeconds: 40
        command: |
          echo "Failure in install local JDK17"

  - type: Command
    name: "Confirm Variables and Version"
    timeOutInSeconds: 10
    command: |
      echo PATH is $PATH
      echo JAVA_HOME is $JAVA_HOME
      echo OCIR_HOST is $OCIR_HOST
      echo OCIR_STORAGE_NAMESPACE is $OCIR_STORAGE_NAMESPACE
      echo PRIMARY_SOURCE_DIR is ${OCI_PRIMARY_SOURCE_DIR}
      echo This is the java version, it should be java 17
      java -version
      echo This is the maven version
      mvn -v
    onFailure:
      - type: Command
        timeOutInSeconds: 40
        Command: |
          echo "Error in Confirm Variables and Version"


  - type: Command
    name: "Build and Package Services"
    timeoutInSeconds: 1200
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot
      echo Running maven package `Working in pwd`
      echo mvn clean
      mvn clean
      echo mvn package
      mvn package
      docker images


  - type: Command
    name: "Build Docker Images"
    shell: bash
    user: root
    timeoutInSeconds: 60
    command: |
      SECURITY_SERVICE_IMAGE_BUILD_VERSION="1.0.0"
      USERS_SERVICE_IMAGE_BUILD_VERSION="1.0.0"
      TASKS_SERVICE_IMAGE_BUILD_VERSION="1.0.0"

      echo Building security-service image
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot/security-service
      ls
      docker build -t security-service .
      cd ..

      echo Building tasks-service image
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot/tasks-service
      docker build -t tasks-service .
      cd ..

      echo Building users-service image
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot/users-service
      docker build -t users-service .
      cd ..

      echo docker images:
      docker images

  - type: Command
    name: "Export Helm chart version"
    timeoutInSeconds: 1200
    command: |
      mkdir -p ~/.local/bin
      wget https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -O ~/.local/bin/yq
      chmod +x ~/.local/bin/yq
      export PATH=$HOME/.local/bin:$PATH

      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot/k8s/oke/security
      CHART_VERSION=`yq eval '.version' Chart.yaml`

  - type: Command
    name: "Push Helm Charts"
    timeoutInSeconds: 1200
    command: |
      TENANCY_NAMESPACE=`oci os ns get --query data --raw-output`
      helm registry login -u $TENANCY_NAMESPACE/$OCIR_USERNAME ${OCI_RESOURCE_PRINCIPAL_REGION}.ocir.io -p $OCIR_AUTH_TOKEN_VAULT
      export HELM_EXPERIMENTAL_OCI=1
      echo entering /chatbot/k8s/oke
      cd ${OCI_PRIMARY_SOURCE_DIR}/chatbot/k8s/oke

      echo entering security folder
      cd security
      echo Performing helm package
      helm package .
      cd ..

      echo entering tasks folder
      cd tasks
      echo Performing helm package
      helm package .
      cd ..

      echo entering users folder
      cd users
      echo Performing helm package
      helm package .
      cd ..

      echo performing push to security repo
      cd security
      helm push ./*.tgz oci://${OCI_RESOURCE_PRINCIPAL_REGION}.ocir.io/$TENANCY_NAMESPACE/helm
      cd ..

      echo performing push to security repo
      cd tasks
      helm push ./*.tgz oci://${OCI_RESOURCE_PRINCIPAL_REGION}.ocir.io/$TENANCY_NAMESPACE/helm
      cd ..

      echo performing push to security repo
      cd users
      helm push ./*.tgz oci://${OCI_RESOURCE_PRINCIPAL_REGION}.ocir.io/$TENANCY_NAMESPACE/helm
      cd ..

outputArtifacts:
  - name: users-service
    type: DOCKER_IMAGE
    #location: qro.ocir.io/ax7vdftklenx/chatbot/users-service
    location: users-service

  - name: tasks-service
    type: DOCKER_IMAGE
    #location: qro.ocir.io/ax7vdftklenx/chatbot/tasks-service
    location: tasks-service

  - name: security-service
    type: DOCKER_IMAGE
    #location: qro.ocir.io/ax7vdftklenx/chatbot/security-service
    location: security-service
