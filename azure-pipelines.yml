# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1d1cde7a-cd3a-4e6a-aad7-3f0f981c4d17'
  imageRepository: 'elcasvijavaoraclechatbot'
  containerRegistry: 'chatbotmsacr.azurecr.io'
  workingdirjava: '$(Build.SourcesDirectory)/chatbot'
  dockercomposefilePath: '$(Build.SourcesDirectory)/chatbot/docker-compose.yaml'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: Carlos Pool
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: '$(workingdirjava)/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 'default'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        goals: 'package'
    - task: DockerCompose@1
      displayName: Push services
      inputs:
        action: Push services
        azureSubscription: 'Azure subscription 1(b01abb94-ddeb-44ee-a283-e1cd3f97edf7)'
        azureContainerRegistry: '{"loginServer":"chatbotmsacr.azurecr.io", "id" : "/subscriptions/b01abb94-ddeb-44ee-a283-e1cd3f97edf7/resourceGroups/chatbot-rg/providers/Microsoft.ContainerRegistry/registries/chatbotmsacr"}'
        dockerComposeFile: '$(dockercomposefilepath)'
        projectName: 'elcasvi-java-oracle-chatbot'
        #qualifyImageNames: true
        #additionalImageTags: $(Build.BuildId)
        additionalImageTags: '1.0.0'