# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1d1cde7a-cd3a-4e6a-aad7-3f0f981c4d17'
  imageRepository: 'elcasvijavaoraclechatbot'
  containerRegistry: 'chatbotmsacr'
  workingdirjava: '$(Build.SourcesDirectory)/chatbot'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: Carlos Pool
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: '$(workingdirjava)/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 'default'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        goals: 'package'

    - task: Docker@2
      displayName: Build and push security microservice to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '$(workingdirjava)/security-service/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          '1.0.0'
    - task: Docker@2
      displayName: Build and push users microservice to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '$(workingdirjava)/users-service/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          '1.0.0'
    - task: Docker@2
      displayName: Build and push tasks microservice to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '$(workingdirjava)/tasks-service/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          '1.0.0'